version: "3"
services:
  dvadmin-web:
    container_name: dvadmin-web
    ports:
      - "8080:8080"
    build:
      context: ./
      dockerfile: ./docker_env/web/Dockerfile
    environment:
      TZ: Asia/Shanghai
#    volumes:
#      - ./docker_env/nginx/my.conf:/etc/nginx/conf.d/my.conf
    expose:
      - "8080"
#    networks:
#      network:
#        ipv4_address: 177.8.0.11

  dvadmin-django:
    build:
      context: .
      dockerfile: ./docker_env/django/Dockerfile
    container_name: dvadmin-django
    working_dir: /backend
#    depends_on:
#      - dvadmin-mysql
    environment:
      PYTHONUNBUFFERED: 1
      DATABASE_HOST: dvadmin-mysql
      TZ: Asia/Shanghai
    volumes:
      - /data/prosafeai_data:/data
#      - ./backend:/backend
#      - ./logs/log:/var/log
    ports:
      - "8000:8000"
    expose:
      - "8000"
    restart: always
#    networks:
#      network:
#        ipv4_address: 177.8.0.12

#  dvadmin-mysql:
#    image: mysql:5.7
#    container_name: dvadmin-mysql
#    privileged: true
#    restart: always
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_ROOT_PASSWORD: "123456"
##      MYSQL_DATABASE: "dvadmin_pro"
#      MYSQL_DATABASE: "django-vue-admin"
#      TZ: Asia/Shanghai
#    command:
#      --wait_timeout=31536000
#      --interactive_timeout=31536000
#      --max_connections=1000
#      --default-authentication-plugin=mysql_native_password
#    volumes:
#      - "./docker_env/mysql/data:/var/lib/mysql"
##      - "/home/docker_volume/mysql:/var/lib/mysql"
#      - "./docker_env/mysql/conf.d:/etc/mysql/conf.d"
#      - "./docker_env/mysql/logs:/logs"
#    networks:
#      network:
#        ipv4_address: 177.8.0.13


#
  dvadmin-celery:
    build:
      context: .
      dockerfile: ./docker_env/celery/Dockerfile
    # image: django:2.2
    container_name: dvadmin-celery
    working_dir: /backend
#    depends_on:
#      - dvadmin-mysql
    environment:
      PYTHONUNBUFFERED: 1
      DATABASE_HOST: dvadmin-mysql
      TZ: Asia/Shanghai
    volumes:
      - /data/prosafeai_data:/data
#      - ./backend:/backend
#      - ./logs/log:/var/log
    restart: always
#    networks:
#      network:
#        ipv4_address: 177.8.0.14

  dvadmin-redis:
    build:
      context: .
      dockerfile: ./docker_env/redis/Dockerfile
#    image: redis:6.2.6-alpine
    container_name: dvadmin-redis
    restart: on-failure
    environment:
     - TZ=Asia/Shanghai # config timezone
#    volumes:
#     - ./docker_env/redis/data:/data
#     - ./docker_env/redis/redis.conf:/etc/redis/redis.conf
    ports:
     - "6379:6379"
    sysctls:
     - net.core.somaxconn=1024
    command: /bin/sh -c "echo 'vm.overcommit_memory = 1' >> /etc/sysctl.conf && redis-server /etc/redis/redis.conf --appendonly yes" # Specify a configuration file and enable persistence
    privileged: true
#    networks:
#     network:
#       ipv4_address: 177.8.0.15


networks:
  network:
    ipam:
      driver: host
#      config:
#        - subnet: '177.8.0.0/16'

